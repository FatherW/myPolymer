var app = angular.module('demoApp');
app.directive('deafData', function ($compile, $templateRequest, $mdDialog, $uibModal) {
    var deafData = {
        restrict: 'E',
        priority: 1000,
        scope: true,
        link: function (scope, element, attrs) {
            scope.http = "http://d27btag9kamoke.cloudfront.net/";
            scope.directiveId = "deafData";
            scope.type = "deafData";
            scope.templatePath = "builder6.0/" + scope.directiveId + "/element.html?id=" + new Date().getTime()
            scope.templateUrl = scope.http + scope.templatePath;
            scope.editorCustomInit(scope, element, attrs).then(function () {
                var template = angular.element('<div bind-html-compile="model.html" context-menu="menuOptions"></div>');
                element.html(template);
                $compile(template)(scope);
            });
        },
        controller: function ($scope, $element, $attrs) {
            $scope.photoInit = function (title) {
                $scope.rootScope.listObject($scope.rootScope.exportBucket, 'slider/'+title+'/').then(function (data) {
                    function insertionSort(files, attrToSortBy) {
                        for (var k = 1; k < files.length; k++) {
                            for (var i = k; i > 0 && new Date(files[i][attrToSortBy]) <
                            new Date(files[i - 1][attrToSortBy]); i--) {
                                var tmpFile = files[i];
                                files[i] = files[i - 1];
                                files[i - 1] = tmpFile;
                            }
                        }
                    }

                    insertionSort(data, "LastModified");

                    angular.forEach(data.reverse(), function (value, key) {
                        if (value.Key.match(/\.(jpg|jpeg|png|gif|JPG|JPEG|PNG|GIF)$/)) {
                            fileName = value.Key.replace('image/', '');
                            fileName = fileName.replace('images%2F', '');
                            fileNameToJpg = fileName.substr(0, fileName.lastIndexOf(".")) + ".jpg";
                            $scope.allList.push({
                                key: value.Key,
                                filename: fileName
                            });
                        }
                    });
                    $scope.$apply(function () {
                        $scope.userGallery = $scope.userGallery.concat($scope.allList.slice($scope.userGallery.length, $scope.userGallery.length + 50));
                        $scope.inited = true;
                    });
                });
            }
        
            $scope.menuOptions = [
                ["更換模版", function () {
                    $mdDialog.show({
                        controller: 'templatePopupController',
                        templateUrl: 'models/templatePopup/popup.html' + "?id=" + new Date().getTime(),
                        locals: {
                            rootScope: $scope
                        }
                    }).then(function (template) {
                        $scope.useTemplate();
                    });
                }]
            ];
            $attrs.$observe('data', function (value) {
                $scope.tableName = value;
            })
            $scope.loadData = function () {
                return new Promise(function (resolve, reject) {
                    $scope.getJson($scope.userBucket, $scope.websiteKey + "content/" + $scope.tableName + "-data.json").then(function (json) {
                        //var json2 = orderBy(json,"日期",true);
                        resolve(json);
                    }, function () {
                        $scope.saveJson($scope.userBucket, $scope.websiteKey + "content/" + $scope.tableName + "-data.json", []);
                        resolve([]);
                    });
                });
            }
            $scope.updateData = function () {
                return new Promise(function (resolve, reject) {
                    $scope.loadData().then(function (data) {
                        $scope.model.data = data;
                        $scope.updateHtml();
                        resolve();
                    })
                });
            }
            
            $scope.getYouTubeLink = function (url) {
                var ID = '';
                url = url.replace(/(>|<)/gi, '').split(/(vi\/|v=|\/v\/|youtu\.be\/|\/embed\/)/);
                if (url[2] !== undefined) {
                    ID = url[2].split(/[^0-9a-z_\-]/i);
                    ID = ID[0];
                } else {
                    ID = url;
                }
                return "https://www.youtube.com/embed/"+ID;
            }
        }
    };
    return deafData;
});
var app = angular.module('demoApp');
app.directive('editorContainerElement', function ($compile, $templateRequest, $uibModal, $mdDialog) {
    var editorContainerElement = {
        restrict: 'E',
        priority: 1000,
        scope: true,
        transclude: true,
        template: '<div background context-menu="menuOptions" ng-transclude></div>',
        link: function (scope, element, attrs) {
            scope.http = "http://d27btag9kamoke.cloudfront.net/";
            scope.directiveId = "editorContainerElement";
            scope.type = "editorContainerElement";
            scope.templatePath = "builder6.0/" + scope.directiveId + "/element.html?id=" + new Date().getTime()
            scope.templateUrl = scope.http + scope.templatePath;
            scope.model= {
                id: attrs.id || "ele" + new Date().getTime() + "-" + Object.keys(scope.atom).length;
                type:"editorContainerElement"
            };
            if ('custom' in attrs) {
                var id = attrs.id || "ele" + new Date().getTime() + "-" + Object.keys(scope.atom).length;
                if (angular.isUndefined(scope.atom[id])) {
                    scope.atom[id] = {
                        "id": id,
                        "type": "editor-container-model"
                    };
                    if (!$.trim(element.html())) {
                        scope.atom[id].html = '<div>editor-container-model</div>'
                    } else {
                        var oldElement = angular.element("<div></div>").html(element.html());
                        scope.unwrap(oldElement);
                        scope.atom[id].html = oldElement.html();
                    }
                }
                var tmpElement = angular.element("<div></div>").append(scope.atom[id].html);
                scope.unwrap(tmpElement);
                element.children('[context-menu]').eq(0).html(tmpElement.html());
                $compile(element.children('[context-menu]').eq(0).contents())(scope);
            }
        },
        controller: function ($scope, $element, $attrs) {
            $scope.menuOptions = [
                ['編緝Container', function () {
                    var container = angular.element("<div></div>").append($element.html());
                    $scope.openCodePopup(container.html(), 'html').then(function (newCode) {
                        var newHtml = angular.element("<div></div>").append(newCode);
                        $scope.unwrap(newHtml);
                        newHtml.find("[custom]").each(function (index, element) {
                            var id = $(element).attr('id');
                            if (!angular.isUndefined($scope.atom[id])) {
                                $scope.atom[id].html = $(element).html();
                            }
                        });

                        var id = $element.attr('id');
                        if ('master' in $attrs && !angular.isUndefined($scope.masterAtom[id])) {
                            $scope.masterAtom[id].html = newHtml.html();
                        }
                        if ('custom' in $attrs && !angular.isUndefined($scope.atom[id])) {
                            $scope.atom[id].html = newHtml.html();
                        }
                        $element.html(newHtml.html());
                        $compile($element)($scope);
                    });
                }],
                ['背景管理', function () {
                    $mdDialog.show({
                        controller: "backgroundPopupController",
                        templateUrl: 'models/backgroundPopup/popup.html' + '?id=' + new Date().getTime(),
                        locals: {
                            rootScope: $scope
                        }
                    }).then(function (template) {


                    });
                }],
                ["取消背景", function () {
                    $element.css('background', 'none');
                    $element.css('display', 'block');
                }],
                ["新增結構", function () {
                    $mdDialog.show({
                        templateUrl: 'models/addStructurePopup/popup.html' + "?id=" + new Date().getTime(),
                        controller: 'addStructurePopupController',
                        clickOutsideToClose: true,
                        locals: {
                            rootScope: $scope
                        }
                    }).then(function (structure) {
                        var html = angular.element("<div class='row'></div>");
                        for (var i = 0; i < structure.length; i++) {
                            html.append("<div class='col col-md-" + structure[i] + "'><editor-container-element>" + "<text></text>" + "</editor-container-element></div>")
                        }
                        $element.children('[context-menu]').eq(0).append(html);
                        $compile(html)($scope);
                    });
                }],
                ["新增元素", function () {
                    $mdDialog.show({
                        controller: 'elementPopupController',
                        templateUrl: 'models/elementPopup/popup.html' + "?id=" + new Date().getTime(),
                        locals: {
                            rootScope: $scope
                        }
                    }).then(function (element) {
                        var html = angular.element(element.code);
                        $element.children('[context-menu]').eq(0).append(html);
                        $compile(html)($scope);
                    });
                }]
            ];
        }
    }
    return editorContainerElement;
});
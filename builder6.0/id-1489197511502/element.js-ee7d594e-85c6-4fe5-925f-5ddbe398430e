var app = angular.module('demoApp');

app.directive('editorTab', function ($ocLazyLoad) {
    var path = "https://d27btag9kamoke.cloudfront.net/builder6.0/id-1489197511502";
    var editortab = {
        restrict: 'E',
        priority: 1000,
        scope: true,
        templateUrl: path + '/html/id-1489197511502.html' + '?id=' + new Date().getTime(),
        controller: function ($scope, $element, $attrs) {
            //element init
            $scope.currentNavItem = 'Courses';
            $scope.id = $element[0].id || "ele" + new Date().getTime();
            $element[0].id = $scope.id;
            if (angular.isUndefined($scope.atom[$scope.id])) {
                $scope.atom[$scope.id] = {
                    "id": $scope.id,
                    "src": $scope.src,
                    "link": "#",
                    "html": "<div>hello world</div>"
                };
            }
            $scope.model = $scope.atom[$scope.id];
            $scope.imgMenuOptions = [
                ["下一頁", function ($itemScope) {
                      $scope.currentNavItem = 'Courses';
                }],
                ["上一頁", function ($itemScope) {
                      $scope.currentNavItem = 'Apply';
                }]
            ];

                var tabs = [
                      { title: 'One', content: "Tabs will become paginated if there isn't enough room for them."},
                      { title: 'Two', content: "You can swipe left and right on a mobile device to change tabs."},
                      { title: 'Three', content: "You can bind the selected tab via the selected attribute on the md-tabs element."},
                      { title: 'Four', content: "If you set the selected tab binding to -1, it will leave no tab selected."},
                      { title: 'Five', content: "If you remove a tab, it will try to select a new one."},
                      { title: 'Six', content: "There's an ink bar that follows the selected tab, you can turn it off if you want."},
                      { title: 'Seven', content: "If you set ng-disabled on a tab, it becomes unselectable. If the currently selected tab becomes disabled, it will try to select the next tab."},
                      { title: 'Eight', content: "If you look at the source, you're using tabs to look at a demo for tabs. Recursion!"},
                      { title: 'Nine', content: "If you set md-theme=\"green\" on the md-tabs element, you'll get green tabs."},
                      { title: 'Ten', content: "If you're still reading this, you should just go check out the API docs for tabs!"}
                    ],
                    selected = null,
                    previous = null;
                $scope.tabs = tabs;
                $scope.selectedIndex = 2;
                $scope.$watch('selectedIndex', function(current, old){
                  previous = selected;
                  selected = tabs[current];
                  if ( old + 1 && (old != current)) $log.debug('Goodbye ' + previous.title + '!');
                  if ( current + 1 )                $log.debug('Hello ' + selected.title + '!');
                });
                $scope.addTab = function (title, view) {
                  view = view || title + " Content View";
                  tabs.push({ title: title, content: view, disabled: false});
                };
                $scope.removeTab = function (tab) {
                  var index = tabs.indexOf(tab);
                  tabs.splice(index, 1);
                };

                
            $element[0].addEventListener("DOMSubtreeModified", function () {
                console.log('DOM changed');
            });
            //element init
        }
    }
    return editortab;
});

